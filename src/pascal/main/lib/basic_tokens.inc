 with TOKENS[$81] do begin Name:= 'NEW'; decoder:= nil; end;
 with TOKENS[$82] do begin Name:= 'CONT'; decoder:= nil; end;
 with TOKENS[$83] do begin Name:= 'STOP'; decoder:= nil; end;
 with TOKENS[$84] do begin Name:= 'END'; decoder:= nil; end;
 with TOKENS[$85] do begin Name:= 'RESTORE'; decoder:= nil; end;
 with TOKENS[$86] do begin Name:= 'RETURN'; decoder:= nil; end;
 with TOKENS[$87] do begin Name:= 'RUN'; decoder:= nil; end;
 with TOKENS[$88] do begin Name:= 'RUN'; decoder:= @TokenDecoder01; end;
 with TOKENS[$89] do begin Name:= 'GOTO'; decoder:= @TokenDecoder01; end;
 with TOKENS[$8A] do begin Name:= 'GOSUB'; decoder:= @TokenDecoder01; end;
 with TOKENS[$8B] do begin Name:= 'LOAD'; decoder:= @TokenDecoder04; end;
 with TOKENS[$8C] do begin Name:= 'SAVE'; decoder:= @TokenDecoder04; end;
 with TOKENS[$8D] do begin Name:= 'CHECK'; decoder:= nil; end;
 with TOKENS[$8E] do begin Name:= 'OUT'; decoder:= @TokenDecoder05; end;
 with TOKENS[$8F] do begin Name:= 'POKE'; decoder:= @TokenDecoder05; end;
 with TOKENS[$90] do begin Name:= 'WAIT'; decoder:= @TokenDecoder0A; end;
 with TOKENS[$91] do begin Name:= 'WAIT MEM'; decoder:= @TokenDecoder0A; end;
 with TOKENS[$92] do begin Name:= 'WAIT TIME'; decoder:= @TokenDecoder04; end;
 with TOKENS[$93] do begin Name:= 'LIST'; decoder:= nil; end;
 with TOKENS[$94] do begin Name:= 'LIST'; decoder:= @TokenDecoder01; end;
 with TOKENS[$95] do begin Name:= 'LIST'; decoder:= @TokenDecoder0B; end;
 with TOKENS[$96] do begin Name:= 'SOUND'; decoder:= @TokenDecoder0C; end;
 with TOKENS[$97] do begin Name:= 'NOISE'; decoder:= @TokenDecoder0D; end;
 with TOKENS[$98] do begin Name:= 'ENVELOPE'; decoder:= @TokenDecoder0E; end;
 with TOKENS[$99] do begin Name:= 'CURSOR'; decoder:= @TokenDecoder05; end;
 with TOKENS[$9A] do begin Name:= 'MODE'; decoder:= @TokenDecoder0F; end;
 with TOKENS[$9B] do begin Name:= 'DOT'; decoder:= @TokenDecoder07; end;
 with TOKENS[$9C] do begin Name:= 'DRAW'; decoder:= @TokenDecoder08; end;
 with TOKENS[$9D] do begin Name:= 'FILL'; decoder:= @TokenDecoder08; end;
 with TOKENS[$9E] do begin Name:= 'COLORT'; decoder:= @TokenDecoder09; end;
 with TOKENS[$9F] do begin Name:= 'COLORG'; decoder:= @TokenDecoder09; end;
 with TOKENS[$A0] do begin Name:= 'INPUT'; decoder:= @TokenDecoder11; end;
 with TOKENS[$A1] do begin Name:= 'INPUT'; decoder:= @TokenDecoder10; end;
 with TOKENS[$A2] do begin Name:= 'DATA'; decoder:= @TokenDecoder03; end;
 with TOKENS[$A3] do begin Name:= 'READ'; decoder:= @TokenDecoder11; end;
 with TOKENS[$A4] do begin Name:= 'LET'; decoder:= @TokenDecoder13; end;
 with TOKENS[$A5] do begin Name:= ''; decoder:= @TokenDecoder13; end; // LET
 with TOKENS[$A6] do begin Name:= 'IF'; decoder:= @TokenDecoder14; end;
 with TOKENS[$A7] do begin Name:= 'IF'; decoder:= @TokenDecoder15; end;
 with TOKENS[$A8] do begin Name:= 'IF'; decoder:= @TokenDecoder16; end;
 with TOKENS[$A9] do begin Name:= 'REM'; decoder:= @TokenDecoder03; end;
 with TOKENS[$AA] do begin Name:= 'FOR'; decoder:= @TokenDecoder17; end;
 with TOKENS[$AB] do begin Name:= 'NEXT'; decoder:= nil; end;
 with TOKENS[$AC] do begin Name:= 'NEXT'; decoder:= @TokenDecoder18; end;
 with TOKENS[$AD] do begin Name:= 'PRINT'; decoder:= @TokenDecoder19; end;
 with TOKENS[$AE] do begin Name:= 'ON'; decoder:= @TokenDecoder1A; end;
 with TOKENS[$AF] do begin Name:= 'ON'; decoder:= @TokenDecoder1B; end;
 with TOKENS[$B0] do begin Name:= 'DIM'; decoder:= @TokenDecoder11; end;
 with TOKENS[$B1] do begin Name:= '***'; decoder:= @TokenDecoder03; end;
 with TOKENS[$B2] do begin Name:= 'UT'; decoder:= nil; end;
 with TOKENS[$B3] do begin Name:= 'CALLM'; decoder:= @TokenDecoder1C; end;
 with TOKENS[$B4] do begin Name:= 'CLEAR'; decoder:= @TokenDecoder04; end;
 with TOKENS[$B5] do begin Name:= 'IMP'; decoder:= nil; end;
 with TOKENS[$B6] do begin Name:= 'LIST'; decoder:= nil; end;
 with TOKENS[$B7] do begin Name:= 'LIST'; decoder:= @TokenDecoder01; end;
 with TOKENS[$B8] do begin Name:= 'LIST'; decoder:= @TokenDecoder0B; end;
 with TOKENS[$B9] do begin Name:= 'SAVEA'; decoder:= @TokenDecoder1E; end;
 with TOKENS[$BA] do begin Name:= 'LOADA'; decoder:= @TokenDecoder1E; end;
 with TOKENS[$BB] do begin Name:= 'TALK'; decoder:= @TokenDecoder04; end;
 with TOKENS[$BC] do begin Name:= 'STEP'; decoder:= nil; end;
 with TOKENS[$BD] do begin Name:= 'TRON'; decoder:= nil; end;
 with TOKENS[$BE] do begin Name:= 'TROFF'; decoder:= nil; end;

 with FUNCS[$00] do begin Name:= 'ABS'; retType:= $0; args:= [$0]; end;
 with FUNCS[$01] do begin Name:= 'ALOG'; retType:= $0; args:= [$0]; end;
 with FUNCS[$02] do begin Name:= 'ASC'; retType:= $1; args:= [$2]; end;
 with FUNCS[$03] do begin Name:= 'CHR$'; retType:= $2; args:= [$1]; end;
 with FUNCS[$04] do begin Name:= 'CURX'; retType:= $1; args:= []; end;
 with FUNCS[$05] do begin Name:= 'CURY'; retType:= $1; args:= []; end;
 with FUNCS[$06] do begin Name:= 'EXP'; retType:= $0; args:= [$0]; end;
 with FUNCS[$07] do begin Name:= 'FRAC'; retType:= $0; args:= [$0]; end;
 with FUNCS[$08] do begin Name:= 'FRE'; retType:= $1; args:= []; end;
 with FUNCS[$09] do begin Name:= 'FREQ'; retType:= $1; args:= [$0]; end;
 with FUNCS[$0A] do begin Name:= 'GETC'; retType:= $1; args:= []; end;
 with FUNCS[$0B] do begin Name:= 'HEX$'; retType:= $2; args:= [$1]; end;
 with FUNCS[$0C] do begin Name:= 'INP'; retType:= $1; args:= [$1]; end;
 with FUNCS[$0D] do begin Name:= 'INT'; retType:= $0; args:= [$0]; end;
 with FUNCS[$0E] do begin Name:= 'LEFT$'; retType:= $2; args:= [$2,$1]; end;
 with FUNCS[$0F] do begin Name:= 'LEN'; retType:= $1; args:= [$2]; end;
 with FUNCS[$10] do begin Name:= 'VARPTR'; retType:= $1; args:= [$3]; end;
 with FUNCS[$11] do begin Name:= 'LOG'; retType:= $0; args:= [$0]; end;
 with FUNCS[$12] do begin Name:= 'LOGT'; retType:= $0; args:= [$0]; end;
 with FUNCS[$13] do begin Name:= 'XMAX'; retType:= $1; args:= []; end;
 with FUNCS[$14] do begin Name:= 'YMAX'; retType:= $1; args:= []; end;
 with FUNCS[$15] do begin Name:= 'MID$'; retType:= $2; args:= [$2,$1,$1]; end;
 with FUNCS[$16] do begin Name:= 'PDL'; retType:= $1; args:= [$1]; end;
 with FUNCS[$17] do begin Name:= 'PEEK'; retType:= $1; args:= [$1]; end;
 with FUNCS[$18] do begin Name:= 'PI'; retType:= $0; args:= []; end;
 with FUNCS[$19] do begin Name:= 'RIGHT$'; retType:= $2; args:= [$2,$1]; end;
 with FUNCS[$1A] do begin Name:= 'RND'; retType:= $0; args:= [$0]; end;
 with FUNCS[$1B] do begin Name:= 'SCRN'; retType:= $1; args:= [$1,$1]; end;
 with FUNCS[$1C] do begin Name:= 'SGN'; retType:= $0; args:= [$0]; end;
 with FUNCS[$1D] do begin Name:= 'SPC'; retType:= $2; args:= [$1]; end;
 with FUNCS[$1E] do begin Name:= 'SQR'; retType:= $0; args:= [$0]; end;
 with FUNCS[$1F] do begin Name:= 'STR$'; retType:= $2; args:= [$0]; end;
 with FUNCS[$20] do begin Name:= 'TAB'; retType:= $2; args:= [$1]; end;
 with FUNCS[$21] do begin Name:= 'VAL'; retType:= $0; args:= [$2]; end;
 with FUNCS[$22] do begin Name:= 'SIN'; retType:= $0; args:= [$0]; end;
 with FUNCS[$23] do begin Name:= 'COS'; retType:= $0; args:= [$0]; end;
 with FUNCS[$24] do begin Name:= 'TAN'; retType:= $0; args:= [$0]; end;
 with FUNCS[$25] do begin Name:= 'ASIN'; retType:= $0; args:= [$0]; end;
 with FUNCS[$26] do begin Name:= 'ACOS'; retType:= $0; args:= [$0]; end;
 with FUNCS[$27] do begin Name:= 'ATN'; retType:= $0; args:= [$0]; end;

with OPERS[$00] do begin Name:= '+'; Code:= $00; Pri:= 5; Uni:= True; end;
with OPERS[$01] do begin Name:= '-'; Code:= $01; Pri:= 5; Uni:= True; end;
with OPERS[$02] do begin Name:= '/'; Code:= $02; Pri:= 6; Uni:= False; end;
with OPERS[$03] do begin Name:= '*'; Code:= $03; Pri:= 6; Uni:= False; end;
with OPERS[$04] do begin Name:= '^'; Code:= $04; Pri:= 7; Uni:= False; end;
with OPERS[$05] do begin Name:= ''; Code:= $05; Pri:= 0; Uni:= False; end;
with OPERS[$06] do begin Name:= ''; Code:= $06; Pri:= 0; Uni:= False; end;
with OPERS[$07] do begin Name:= ''; Code:= $07; Pri:= 0; Uni:= False; end;
with OPERS[$08] do begin Name:= ''; Code:= $08; Pri:= 0; Uni:= False; end;
with OPERS[$09] do begin Name:= 'IAND'; Code:= $09; Pri:= 3; Uni:= False; end;
with OPERS[$0A] do begin Name:= 'IOR'; Code:= $0A; Pri:= 3; Uni:= False; end;
with OPERS[$0B] do begin Name:= ''; Code:= $0B; Pri:= 0; Uni:= False; end;
with OPERS[$0C] do begin Name:= 'IXOR'; Code:= $0C; Pri:= 3; Uni:= False; end;
with OPERS[$0D] do begin Name:= 'SHL'; Code:= $0D; Pri:= 4; Uni:= False; end;
with OPERS[$0E] do begin Name:= 'SHR'; Code:= $0E; Pri:= 4; Uni:= False; end;
with OPERS[$0F] do begin Name:= 'MOD'; Code:= $0F; Pri:= 6; Uni:= False; end;
with OPERS[$10] do begin Name:= '>='; Code:= $10; Pri:= 2; Uni:= False; end;
with OPERS[$11] do begin Name:= '>'; Code:= $11; Pri:= 2; Uni:= False; end;
with OPERS[$12] do begin Name:= '<>'; Code:= $12; Pri:= 2; Uni:= False; end;
with OPERS[$13] do begin Name:= '<='; Code:= $13; Pri:= 2; Uni:= False; end;
with OPERS[$14] do begin Name:= '<'; Code:= $14; Pri:= 2; Uni:= False; end;
with OPERS[$15] do begin Name:= '='; Code:= $15; Pri:= 2; Uni:= False; end;
with OPERS[$16] do begin Name:= ''; Code:= $16; Pri:= 0; Uni:= False; end;
with OPERS[$17] do begin Name:= ''; Code:= $17; Pri:= 0; Uni:= False; end;
with OPERS[$18] do begin Name:= 'AND'; Code:= $18; Pri:= 1; Uni:= False; end;
with OPERS[$19] do begin Name:= 'OR'; Code:= $19; Pri:= 1; Uni:= False; end;
with OPERS[$1A] do begin Name:= '('; Code:= $1A; Pri:= 0; Uni:= True; end;
with OPERS[$1B] do begin Name:= ''; Code:= $1B; Pri:= 0; Uni:= False; end;
with OPERS[$1C] do begin Name:= '+'; Code:= $1C; Pri:= 0; Uni:= True; end;
with OPERS[$1D] do begin Name:= '-'; Code:= $1D; Pri:= 0; Uni:= True; end;
with OPERS[$1E] do begin Name:= 'INOT'; Code:= $1E; Pri:= 0; Uni:= True; end;
with OPERS[$1F] do begin Name:= ''; Code:= $1F; Pri:= 0; Uni:= True; end;

